// <auto-generated />
using System;
using Lockthreat.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lockthreat.Migrations
{
    [DbContext(typeof(LockthreatDbContext))]
    [Migration("20200426051232_Added-Table-ControlDesigns")]
    partial class AddedTableControlDesigns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AbpEditions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Edition");
                });

            modelBuilder.Entity("Abp.Application.Features.FeatureSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FeatureSetting");
                });

            modelBuilder.Entity("Abp.Auditing.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("CustomData")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImpersonatorTenantId")
                        .HasColumnType("int");

                    b.Property<long?>("ImpersonatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("ReturnValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionDuration");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpAuditLogs");
                });

            modelBuilder.Entity("Abp.Authorization.PermissionSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpRoleClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserLinkId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("UserName");

                    b.HasIndex("TenantId", "EmailAddress");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "UserName");

                    b.ToTable("AbpUserAccounts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpUserClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Result")
                        .HasColumnType("tinyint");

                    b.Property<string>("TenancyName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TenantId");

                    b.HasIndex("TenancyName", "UserNameOrEmailAddress", "Result");

                    b.ToTable("AbpUserLoginAttempts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "RoleId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserRoles");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserTokens");
                });

            modelBuilder.Entity("Abp.BackgroundJobs.BackgroundJobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAbandoned")
                        .HasColumnType("bit");

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(1048576);

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<short>("TryCount")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs");
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "Name", "UserId")
                        .IsUnique();

                    b.ToTable("AbpSettings");
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.DynamicParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InputType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParameterName", "TenantId")
                        .IsUnique()
                        .HasFilter("[ParameterName] IS NOT NULL AND [TenantId] IS NOT NULL");

                    b.ToTable("AbpDynamicParameters");
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.DynamicParameterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DynamicParameterId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DynamicParameterId");

                    b.ToTable("AbpDynamicParameterValues");
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.EntityDynamicParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DynamicParameterId")
                        .HasColumnType("int");

                    b.Property<string>("EntityFullName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DynamicParameterId");

                    b.HasIndex("EntityFullName", "DynamicParameterId", "TenantId")
                        .IsUnique()
                        .HasFilter("[EntityFullName] IS NOT NULL AND [TenantId] IS NOT NULL");

                    b.ToTable("AbpEntityDynamicParameters");
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.EntityDynamicParameterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntityDynamicParameterId")
                        .HasColumnType("int");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntityDynamicParameterId");

                    b.ToTable("AbpEntityDynamicParameterValues");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint");

                    b.Property<long>("EntityChangeSetId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(48)")
                        .HasMaxLength(48);

                    b.Property<string>("EntityTypeFullName")
                        .HasColumnType("nvarchar(192)")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeSetId");

                    b.HasIndex("EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChangeSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtensionData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImpersonatorTenantId")
                        .HasColumnType("int");

                    b.Property<long?>("ImpersonatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "CreationTime");

                    b.HasIndex("TenantId", "Reason");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpEntityChangeSets");
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EntityChangeId")
                        .HasColumnType("bigint");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("OriginalValue")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<string>("PropertyTypeFullName")
                        .HasColumnType("nvarchar(192)")
                        .HasMaxLength(192);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges");
                });

            modelBuilder.Entity("Abp.IdentityServer4.PersistedGrantEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("AbpPersistedGrants");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpLanguages");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguageText", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(67108864);

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Source", "LanguageName", "Key");

                    b.ToTable("AbpLanguageTexts");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ExcludedUserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(131072);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<byte>("Severity")
                        .HasColumnType("tinyint");

                    b.Property<string>("TenantIds")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(131072);

                    b.Property<string>("UserIds")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(131072);

                    b.HasKey("Id");

                    b.ToTable("AbpNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.HasIndex("TenantId", "NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.ToTable("AbpNotificationSubscriptions");
                });

            modelBuilder.Entity("Abp.Notifications.TenantNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(96)")
                        .HasMaxLength(96);

                    b.Property<byte>("Severity")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AbpTenantNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.UserNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantNotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "State", "CreationTime");

                    b.ToTable("AbpUserNotifications");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(95)")
                        .HasMaxLength(95);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "Code")
                        .IsUnique()
                        .HasFilter("[TenantId] IS NOT NULL");

                    b.ToTable("AbpOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnitRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "RoleId");

                    b.ToTable("AbpOrganizationUnitRoles");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("WebhookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbpWebhookEvents");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSendAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponseStatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<Guid>("WebhookEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WebhookSubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WebhookEventId");

                    b.ToTable("AbpWebhookSendAttempts");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Headers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("WebhookUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Webhooks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbpWebhookSubscriptions");
                });

            modelBuilder.Entity("Lockthreat.AddTasks.AddTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualCompleted")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AssignedToId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AssignedUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Frequencys")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LinkedToId")
                        .HasColumnType("int");

                    b.Property<int>("Prioritys")
                        .HasColumnType("int");

                    b.Property<long?>("RequestedById")
                        .HasColumnType("bigint");

                    b.Property<int?>("RiskLevelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("LinkedToId");

                    b.HasIndex("RequestedById");

                    b.HasIndex("RiskLevelId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskTypeId");

                    b.ToTable("AddTasks");
                });

            modelBuilder.Entity("Lockthreat.AddTasks.TaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddTaskId");

                    b.ToTable("TaskAttachments");
                });

            modelBuilder.Entity("Lockthreat.AddTasks.TaskNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddTaskId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TaskNotifications");
                });

            modelBuilder.Entity("Lockthreat.ApplicationConfigurations.ApplicationConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("NumberDecimal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumberValue")
                        .HasColumnType("int");

                    b.Property<string>("SubValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationConfigurations");
                });

            modelBuilder.Entity("Lockthreat.AssetInformations.AssetInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLineOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssetCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssetIdLV")
                        .HasColumnType("int");

                    b.Property<int?>("AssetLabelId")
                        .HasColumnType("int");

                    b.Property<string>("AssetTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("IntegrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OtherId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetCategoryId");

                    b.HasIndex("AssetLabelId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IntegrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OtherId");

                    b.ToTable("AssetInformations");
                });

            modelBuilder.Entity("Lockthreat.Audits.Audit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditAreaId")
                        .HasColumnType("int");

                    b.Property<string>("AuditBackground")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AuditContactId")
                        .HasColumnType("bigint");

                    b.Property<int?>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditLocationAddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditLocationAddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditMemo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditObjectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AuditServicesProviderId")
                        .HasColumnType("int");

                    b.Property<string>("AuditTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditTypes")
                        .HasColumnType("int");

                    b.Property<string>("AuditTypeseother")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BudgetedHours")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentChecklist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FinacialYearId")
                        .HasColumnType("int");

                    b.Property<string>("FinacialYearOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LeadAuditorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RelatedBsinessId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuditAreaId");

                    b.HasIndex("AuditContactId");

                    b.HasIndex("AuditServicesProviderId");

                    b.HasIndex("CountryId");

                    b.HasIndex("FinacialYearId");

                    b.HasIndex("LeadAuditorId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("RelatedBsinessId");

                    b.HasIndex("StatusId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("AuditAttachments");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditAuditor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AuditAuditors");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditBusinessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("BusinessServiceId");

                    b.ToTable("AuditBusinessServices");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditFacilitieDatacenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FacilitieDatacenterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("FacilitieDatacenterId");

                    b.ToTable("AuditFacilitieDatacenters");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AuditTeams");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditVendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("VendorId");

                    b.ToTable("AuditVendors");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditId")
                        .HasColumnType("int");

                    b.Property<long?>("AuditId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PreparedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("WorkpaperAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkpaperId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkpaperLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkpaperTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId1");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TypeId");

                    b.ToTable("AuditWorkpapers");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaperEvidence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentSourceId")
                        .HasColumnType("int");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("DocumentSourceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AuditWorkpaperEvidences");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaperReviewer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditWorkpaperId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditWorkpaperId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AuditWorkpaperReviewers");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthoratativeDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthoratativeDocumentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorityDocumentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorityDocumentOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportantNotice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MandateTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MandateTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("AuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocumentBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentsId");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("AuthoratativeDocumentBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocumentOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.ToTable("AuthoratativeDocumentOrganization");
                });

            modelBuilder.Entity("Lockthreat.Authorization.Delegation.UserDelegation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("SourceUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "SourceUserId");

                    b.HasIndex("TenantId", "TargetUserId");

                    b.ToTable("AppUserDelegations");
                });

            modelBuilder.Entity("Lockthreat.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedName");

                    b.ToTable("AbpRoles");
                });

            modelBuilder.Entity("Lockthreat.Authorization.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AuthenticationSource")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("nvarchar(328)")
                        .HasMaxLength(328);

                    b.Property<string>("GoogleAuthenticatorKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("nvarchar(328)")
                        .HasMaxLength(328);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("ShouldChangePasswordOnNextLogin")
                        .HasColumnType("bit");

                    b.Property<string>("SignInToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignInTokenExpireTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedEmailAddress");

                    b.HasIndex("TenantId", "NormalizedUserName");

                    b.ToTable("AbpUsers");
                });

            modelBuilder.Entity("Lockthreat.BusinessEntities.BusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessUnitTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuditableEntity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ParentUnit")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityCycleId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessProcessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntergrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProcessManagerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProcessOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProcessPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RegulatoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewPeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("SlaApplicableId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityCycleId");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("IntergrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.HasIndex("ProcessManagerId");

                    b.HasIndex("ProcessOwnerId");

                    b.HasIndex("ProcessPriorityId");

                    b.HasIndex("ProcessTypeId");

                    b.HasIndex("RegulatoryId");

                    b.HasIndex("ReviewPeriodId");

                    b.HasIndex("SlaApplicableId");

                    b.HasIndex("StatusId");

                    b.ToTable("BusinessProcess");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("BusinessProcessId");

                    b.ToTable("BusinessProcessAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("BusinessServiceId");

                    b.ToTable("BusinessProcessServices");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("BusinessProcessUnits");
                });

            modelBuilder.Entity("Lockthreat.BusinessServices.BusinessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusinessServiceManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusinessServiceOwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitDependentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitprimaryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IntergrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("BusinessServiceManagerId");

                    b.HasIndex("BusinessServiceOwnerId");

                    b.HasIndex("BusinessUnitDependentId");

                    b.HasIndex("BusinessUnitprimaryId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("IntergrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("BusinessServices");
                });

            modelBuilder.Entity("Lockthreat.BusinessServices.BusinessServiceUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("BusinessServiceUnits");
                });

            modelBuilder.Entity("Lockthreat.Chat.ChatMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(4096);

                    b.Property<int>("ReadState")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverReadState")
                        .HasColumnType("int");

                    b.Property<Guid?>("SharedMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.Property<int?>("TargetTenantId")
                        .HasColumnType("int");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TargetTenantId", "TargetUserId", "ReadState");

                    b.HasIndex("TargetTenantId", "UserId", "ReadState");

                    b.HasIndex("TenantId", "TargetUserId", "ReadState");

                    b.HasIndex("TenantId", "UserId", "ReadState");

                    b.ToTable("AppChatMessages");
                });

            modelBuilder.Entity("Lockthreat.Citations.Citation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CITLV")
                        .HasColumnType("int");

                    b.Property<int?>("CitationClassId")
                        .HasColumnType("int");

                    b.Property<string>("CitationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationOriginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CitationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ControlObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomApplicability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrameworkObjectivesId")
                        .HasColumnType("int");

                    b.Property<string>("IconDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ParentCitationId")
                        .HasColumnType("int");

                    b.Property<string>("RelatedContentImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("UCFCId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("CitationClassId");

                    b.HasIndex("CitationTypeId");

                    b.HasIndex("FrameworkObjectivesId");

                    b.ToTable("Citations");
                });

            modelBuilder.Entity("Lockthreat.Citations.CitationControlStandard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ControlStandardId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("ControlStandardId");

                    b.ToTable("CitationControlStandards");
                });

            modelBuilder.Entity("Lockthreat.Citations.CitationQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("QuestionId");

                    b.ToTable("CitationQuestions");
                });

            modelBuilder.Entity("Lockthreat.Contacts.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LoginUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.Property<string>("jobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("LoginUserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Lockthreat.Contacts.ContactCyberAwarenessScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.ToTable("ContactCyberAwarenessScores");
                });

            modelBuilder.Entity("Lockthreat.Contracts.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ContractCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ContractValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("ContractCategoryId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("VendorId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractAttachments");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractBusinessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("ContractId");

                    b.ToTable("ContractBusinessServices");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractEmployee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ContractEmployees");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractEmployeeNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ContractEmployeeNotifications");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractITService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("ContractITServices");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractRiskTreatment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContractsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskTreatmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("RiskTreatmentId");

                    b.ToTable("ContractRiskTreatments");
                });

            modelBuilder.Entity("Lockthreat.ControlDesigns.ControlDesign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ControlDesignId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ResultStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TestEffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InternalControlId");

                    b.HasIndex("ResultStatusId");

                    b.ToTable("ControlDesigns");
                });

            modelBuilder.Entity("Lockthreat.ControlStandards.ControlStandard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ControlAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("ControlCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ControlClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("ControlDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ControlFrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("ControlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlStandardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomApplicability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrameworkObjectiveId")
                        .HasColumnType("int");

                    b.Property<int?>("FrequencyTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("SampleSize")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TestingProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UCFCId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControlAreaId");

                    b.HasIndex("ControlCategoryId");

                    b.HasIndex("ControlClassificationId");

                    b.HasIndex("ControlFrequencyId");

                    b.HasIndex("FrameworkObjectiveId");

                    b.HasIndex("FrequencyTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("ControlStandards");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CASId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CASName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQuestionarieGenerated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("SatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SourceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TargetTypeId");

                    b.ToTable("CyberAwarenessScores");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.ToTable("CyberAwarenessScoreAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.ToTable("CyberAwarenessScoreBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.ToTable("CyberAwarenessScoreOrganizations");
                });

            modelBuilder.Entity("Lockthreat.Employees.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessCardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DirectPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeGradeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotifiedByEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("EmployeeGradeId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAttachments");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeBusinessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeBusinessServices");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeContracts");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeCyberAwarenessScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCyberAwarenessScores");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeException", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeesId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeesId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("EmployeeExceptions");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeReviewData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReviewDataId");

                    b.ToTable("EmployeeReviewDatas");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeServices");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.Exception", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedTill")
                        .HasColumnType("datetime2");

                    b.Property<long?>("AssetInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("BusinessJustification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CritcalityId")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExceptionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExceptionStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ExceptionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExpertReviewerId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NextReview")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReviewPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RiskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SystemApplicationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetInformationId");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("CritcalityId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExceptionStatusId");

                    b.HasIndex("ExpertReviewerId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("PolicyManagerId");

                    b.HasIndex("ReviewPriorityId");

                    b.HasIndex("ReviewStatusId");

                    b.HasIndex("SystemApplicationId");

                    b.HasIndex("TypeId");

                    b.ToTable("Exceptions");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionAuditingControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionAuditingControls");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionCitation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExceptionInfoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionCitations");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionCitationLibrary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionCitationLibrarys");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExceptionId");

                    b.ToTable("ExceptionDocuments");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExceptionId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.ToTable("ExceptionOrganizations");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionRemediation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemediationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExceptionId");

                    b.HasIndex("RemediationId");

                    b.ToTable("ExceptionRemediations");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<long?>("BusinessUnitGaurdianId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityAddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityAddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("IntegrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("BusinessUnitGaurdianId");

                    b.HasIndex("BusinessUnitOwnerId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("FacilityTypeId");

                    b.HasIndex("IntegrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.ToTable("FacilitieDatacenters");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenterProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FacilitieDatacenterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("FacilitieDatacenterId");

                    b.ToTable("FacilitieDatacenterBusinessProcess");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenterService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FacilitieDatacenterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("FacilitieDatacenterId");

                    b.ToTable("FacilitieDatacenterBusinessServices");
                });

            modelBuilder.Entity("Lockthreat.FacilitiesDatacenters.FacilitieDatacenterITService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FacilitieDatacenterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilitieDatacenterId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("FacilitieDatacenterITServices");
                });

            modelBuilder.Entity("Lockthreat.Findings.FidingOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FindingId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.ToTable("FidingOrganizations");
                });

            modelBuilder.Entity("Lockthreat.Findings.Finding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId")
                        .HasColumnType("int");

                    b.Property<long?>("AssignedId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingCoordinatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("FindingDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FindingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FindingManagerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FindingOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("FindingStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FindingTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PotentialCost")
                        .HasColumnType("int");

                    b.Property<int?>("RankingId")
                        .HasColumnType("int");

                    b.Property<int?>("ResponseId")
                        .HasColumnType("int");

                    b.Property<long?>("ReviewedId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("AssignedId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("FindingCoordinatorId");

                    b.HasIndex("FindingManagerId");

                    b.HasIndex("FindingOwnerId");

                    b.HasIndex("FindingStatusId");

                    b.HasIndex("RankingId");

                    b.HasIndex("ResponseId");

                    b.HasIndex("ReviewedId");

                    b.ToTable("Findings");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FidingBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("FindingId");

                    b.ToTable("FidingBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FindingAssetInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetInformationId");

                    b.HasIndex("FindingId");

                    b.ToTable("FindingAssetInformations");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FindingAuthoratativeSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("FindingId");

                    b.ToTable("FindingAuthoratativeSources");
                });

            modelBuilder.Entity("Lockthreat.Friendships.Friendship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FriendProfilePictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FriendTenancyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FriendTenantId")
                        .HasColumnType("int");

                    b.Property<long>("FriendUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FriendUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FriendTenantId", "FriendUserId");

                    b.HasIndex("FriendTenantId", "UserId");

                    b.HasIndex("TenantId", "FriendUserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AppFriendships");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.GrcProgram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProgramDirectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProgramId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProgramSponsorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProgramTeamEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("ProgramDirectorId");

                    b.HasIndex("ProgramSponsorId");

                    b.ToTable("GrcPrograms");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramAuthoritativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GrcProgramId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("GrcProgramId");

                    b.ToTable("ProgramAuthoritativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramCoordinator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GrcProgramId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProgramCoordinatorsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GrcProgramId");

                    b.HasIndex("ProgramCoordinatorsId");

                    b.ToTable("ProgramCoordinators");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramCountry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GrcProgramId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GrcProgramId");

                    b.ToTable("ProgramCountrys");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GrcProgramId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProgramTeamsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GrcProgramId");

                    b.HasIndex("ProgramTeamsId");

                    b.ToTable("ProgramTeams");
                });

            modelBuilder.Entity("Lockthreat.HardwareAssets.HardwareAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetHardwareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardwareAssetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntegrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LocationsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("IntegrityId");

                    b.HasIndex("LocationsId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.ToTable("HardwareAssets");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLineOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLineTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ITServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ITServiceOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ITServicesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntegrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegulatoryMandateId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceClassificationId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ITServiceManagerId");

                    b.HasIndex("ITServiceOwnerId");

                    b.HasIndex("IntegrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.HasIndex("RegulatoryMandateId");

                    b.HasIndex("ServiceClassificationId");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("ITServices");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("ITServiceAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceBusinessService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("ITServiceBusinessServices");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("ITServiceBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("ITServiceId");

                    b.ToTable("ITServiceContracts");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceRemediation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ITServiceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemediationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ITServiceId");

                    b.HasIndex("RemediationId");

                    b.ToTable("ITServiceRemediations");
                });

            modelBuilder.Entity("Lockthreat.Incidents.Incident", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdversaryId")
                        .HasColumnType("int");

                    b.Property<string>("Correction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CriticalityId")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetectedbyInternalControlsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DetectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EffectId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Eradication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUpAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FollowUpCompletedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Identification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("IncidentClosedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IncidentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentImpactId")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentSeverityId")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("IncidentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentTypesId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("NotifierFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifierLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OccuredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecoveryMeasures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RepeatIncident")
                        .HasColumnType("bit");

                    b.Property<long?>("ReportedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReporterFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReporterLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnologyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("VoilationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdversaryId");

                    b.HasIndex("CriticalityId");

                    b.HasIndex("DetectedbyInternalControlsId");

                    b.HasIndex("EffectId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FollowUpCompletedById");

                    b.HasIndex("IncidentCategoryId");

                    b.HasIndex("IncidentClosedById");

                    b.HasIndex("IncidentImpactId");

                    b.HasIndex("IncidentPriorityId");

                    b.HasIndex("IncidentSeverityId");

                    b.HasIndex("IncidentStatusId");

                    b.HasIndex("IncidentTypesId");

                    b.HasIndex("ReportedById");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("IncidentAttachments");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentFinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FindingId");

                    b.HasIndex("IncidentId");

                    b.ToTable("IncidentFindings");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentReviewer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncidentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IncidentId");

                    b.ToTable("IncidentReviewers");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutomationId")
                        .HasColumnType("int");

                    b.Property<int?>("ComplianceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ControlDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ControlFrequencyId")
                        .HasColumnType("int");

                    b.Property<int?>("ControlStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<int?>("FrequencyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ICId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IcTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("InternalAuditControlId")
                        .HasColumnType("int");

                    b.Property<string>("InternalControlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("SampleSize")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TestingProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutomationId");

                    b.HasIndex("ComplianceStatusId");

                    b.HasIndex("ControlFrequencyId");

                    b.HasIndex("ControlStatusId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FindingId");

                    b.HasIndex("FrequencyTypeId");

                    b.HasIndex("IcTypeId");

                    b.HasIndex("InternalAuditControlId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("PriorityId");

                    b.ToTable("InternalControls");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlAssignedTester", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlAssignedTesters");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlCitation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlCitations");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlFacilitieDatacenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FacilitieDatacenterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FacilitieDatacenterId");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlFacilitieDatacenters");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlFinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FindingId");

                    b.HasIndex("InternalControlId");

                    b.ToTable("InternalControlFindings");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlPolicyManager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("InternalControlPolicyManagers");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlRiskManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("InternalControlRiskManagements");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlRiskManagementTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("InternalControlRiskManagementTitles");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlSystemApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InternalControlId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SystemApplicationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InternalControlId");

                    b.HasIndex("SystemApplicationId");

                    b.ToTable("InternalControlSystemApplications");
                });

            modelBuilder.Entity("Lockthreat.IssueManagements.IssueManageMentProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("IssueManagementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IssueManagementId");

                    b.HasIndex("ProjectId");

                    b.ToTable("IssueManageMentProjects");
                });

            modelBuilder.Entity("Lockthreat.IssueManagements.IssueManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTypes")
                        .HasColumnType("int");

                    b.Property<long?>("AssignedToId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<long?>("CompletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("IssueDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MeetingId")
                        .HasColumnType("int");

                    b.Property<long?>("MeetingId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("OccuranceDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ReporterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("RiskAssessmentRequired")
                        .HasColumnType("bit");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CompletedById");

                    b.HasIndex("IssueCategoryId");

                    b.HasIndex("MeetingId1");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ReporterId");

                    b.ToTable("IssueManagements");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyPerformanceIndicatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyPerformanceIndicatorTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("StatusId");

                    b.ToTable("KeyPerformanceIndicators");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicatorAdministrator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("KeyPerformanceIndicatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KeyPerformanceIndicatorId");

                    b.ToTable("KeyPerformanceIndicatorAdministrators");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicatorBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("KeyPerformanceIndicatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("KeyPerformanceIndicatorId");

                    b.ToTable("KeyPerformanceIndicatorBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.KeyRiskIndicators.KeyRiskIndicator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyRiskIndicatorTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyRiskIndicatorsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("StatusId");

                    b.ToTable("KeyRiskIndicators");
                });

            modelBuilder.Entity("Lockthreat.KeyRiskIndicators.KeyRiskIndicatorBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("KeyRiskIndicatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("KeyRiskIndicatorId");

                    b.ToTable("KeyRiskIndicatorBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.Meetings.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MeetingAgenda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeetingClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingConclusion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MeetingEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MeetingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeetingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingVenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinutesofMeeting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinutesofMeetingAttachedment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganizerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MeetingClassificationId");

                    b.HasIndex("MeetingTypeId");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingAbsenteeUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingAbsenteeUsers");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingAttendUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingAttendUsers");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingFinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FindingId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingFindings");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingIssueIdentified", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("IssueManagementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IssueManagementId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingIssueIdentifieds");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddTaskId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingTasks");
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Accounting.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantLegalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantTaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppInvoices");
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Payments.SubscriptionPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("DayCount")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.Property<int>("EditionPaymentType")
                        .HasColumnType("int");

                    b.Property<string>("ErrorUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalPaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Gateway")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PaymentPeriodType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SuccessUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EditionId");

                    b.HasIndex("ExternalPaymentId", "Gateway");

                    b.HasIndex("Status", "CreationTime");

                    b.ToTable("AppSubscriptionPayments");
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Payments.SubscriptionPaymentExtensionData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("SubscriptionPaymentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionPaymentId", "Key", "IsDeleted")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.ToTable("AppSubscriptionPaymentsExtensionData");
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CustomCssId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EditionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInTrialPeriod")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LogoFileType")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid?>("LogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("SubscriptionEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionPaymentType")
                        .HasColumnType("int");

                    b.Property<string>("TenancyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("EditionId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SubscriptionEndDateUtc");

                    b.HasIndex("TenancyName");

                    b.ToTable("AbpTenants");
                });

            modelBuilder.Entity("Lockthreat.OrganizationSetups.LockThreatOrganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressCountryId")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyAdministratorId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeSize")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustrySectorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAuditableEntity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Leveltype")
                        .HasColumnType("int");

                    b.Property<long?>("OrganizationUnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrimaryContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressCountryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("IndustrySectorId");

                    b.ToTable("LockThreatOrganizations");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentsId");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("PolicyAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyDistribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("PolicyDistributionMethod")
                        .HasColumnType("int");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("PolicyDistributions");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyImpactedOranization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("PolicyImpactedOranizations");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyManager", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ApprovalById")
                        .HasColumnType("bigint");

                    b.Property<string>("ApprovedBySignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FinalReviewerId")
                        .HasColumnType("bigint");

                    b.Property<string>("FinalReviewerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OriginalPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PolicyManagersId")
                        .HasColumnType("bigint");

                    b.Property<string>("PolicyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PolicyOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PolicyScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RelatedPoliciesId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReviewerNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledReview")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpcomingReview")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalById");

                    b.HasIndex("FinalReviewerId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("PolicyManagersId");

                    b.HasIndex("PolicyOwnerId");

                    b.HasIndex("PolicyStatusId");

                    b.HasIndex("PolicyTypeId");

                    b.ToTable("PolicyManagers");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyRelatedControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CitationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CitationId");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("PolicyRelatedControls");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyReviewer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PolicyManagerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PolicyManagerId");

                    b.ToTable("PolicyReviewers");
                });

            modelBuilder.Entity("Lockthreat.Projects.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentProgramId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjectDirectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjectSponsorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("ParentProgramId");

                    b.HasIndex("ProjectDirectorId");

                    b.HasIndex("ProjectSponsorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectAudit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuditId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAudits");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProjectComponentsId")
                        .HasColumnType("int");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectComponentsId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectComponents");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectCountries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectCountries");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeamMembersInternalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TeamMembersInternalId");

                    b.ToTable("ProjectTeamMembers");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMemberExternal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeamMembersExternalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TeamMembersExternalId");

                    b.ToTable("ProjectTeamMemberExternals");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMemberProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeamMembersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TeamMembersId");

                    b.ToTable("ProjectTeamMemberProjects");
                });

            modelBuilder.Entity("Lockthreat.Questions.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnswerPoints")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AnswerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("AnswerTypes")
                        .HasColumnType("bit");

                    b.Property<string>("AnswerValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("QuestionAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionStatusId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionnaireTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("SourceQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalPoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerTypeId");

                    b.HasIndex("QuestionAreaId");

                    b.HasIndex("QuestionCategoryId");

                    b.HasIndex("QuestionStatusId");

                    b.HasIndex("SectionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionReviewAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReviewAssessmentId");

                    b.ToTable("QuestionReviewAssessments");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionReviewData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReviewDataId");

                    b.ToTable("QuestionReviewData");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionTarget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<int?>("QuestionTargetsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionTargetsId");

                    b.ToTable("QuestionTargets");
                });

            modelBuilder.Entity("Lockthreat.Remediations.Remediation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActualCostIncurred")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CompletionDateActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstimatedCost")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MitigationCost")
                        .HasColumnType("int");

                    b.Property<long?>("PlanManagerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlanOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PlanStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PlanTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.Property<string>("RemediationActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemediationPlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RemediationsTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateActual")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubmissionStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentActionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanManagerId");

                    b.HasIndex("PlanOwnerId");

                    b.HasIndex("PlanStatusId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("RemediationsTypeId");

                    b.HasIndex("RiskManagementId");

                    b.HasIndex("RiskManagementsId");

                    b.HasIndex("SubmissionStatusId");

                    b.HasIndex("TreatmentActionId");

                    b.ToTable("Remediations");
                });

            modelBuilder.Entity("Lockthreat.Remediations.RemediationAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemediationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RemediationId");

                    b.ToTable("RemediationAttachments");
                });

            modelBuilder.Entity("Lockthreat.Remediations.RemediationRiskManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemediationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RemediationId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("RemediationRiskManagements");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssignedToId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EveryDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PeriodicReviewEndDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReviewTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReviewTypeId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ReviewAssessments");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessmentBusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ReviewAssessmentId");

                    b.ToTable("ReviewAssessmentBusinessUnits");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessmentVendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReviewAssessmentId");

                    b.HasIndex("VendorId");

                    b.ToTable("ReviewAssessmentVendors");
                });

            modelBuilder.Entity("Lockthreat.ReviewDatas.ReviewData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnswerPoints")
                        .HasColumnType("int");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContactsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CyberAwarenessScoreId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("QuestionAnswered")
                        .HasColumnType("bit");

                    b.Property<long?>("QuestionAssignedToId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionLibraryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RespondedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReviewFeedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReviewLeadId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ReviewQuestionStatusId")
                        .HasColumnType("int");

                    b.Property<string>("SelectedAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("VerfiedTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("VerifierId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ContactsId");

                    b.HasIndex("CyberAwarenessScoreId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("QuestionAssignedToId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionLibraryId");

                    b.HasIndex("RespondedById");

                    b.HasIndex("ReviewAssessmentId");

                    b.HasIndex("ReviewLeadId");

                    b.HasIndex("ReviewQuestionStatusId");

                    b.HasIndex("VendorId");

                    b.HasIndex("VerifierId");

                    b.ToTable("ReviewDatas");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentAuthoratativeDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AuthoratativeDocumentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthoratativeDocumentId");

                    b.HasIndex("ReviewAssessmentId");

                    b.ToTable("ReviewAssessmentAuthoratativeDocuments");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentOraganization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("ReviewAssessmentId");

                    b.ToTable("ReviewAssessmentOraganizations");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReviewAssessmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ReviewAssessmentId");

                    b.ToTable("ReviewAssessmentQuestions");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyNameId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Criticality")
                        .HasColumnType("int");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationFrequency")
                        .HasColumnType("int");

                    b.Property<int?>("ExpectedLoss")
                        .HasColumnType("int");

                    b.Property<int?>("InherentRiskId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastEvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NextEvaluation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextEvaluationIRRBased")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersistenceId")
                        .HasColumnType("int");

                    b.Property<int?>("ResidualRiskId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RiskImpactId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskLiRiskImpactkelihoodId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskLikelihoodId")
                        .HasColumnType("int");

                    b.Property<long?>("RiskManagerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("RiskScore")
                        .HasColumnType("int");

                    b.Property<int?>("RiskScoringMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskStateId")
                        .HasColumnType("int");

                    b.Property<int?>("RiskStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RiskTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RiskTreatmentId")
                        .HasColumnType("int");

                    b.Property<string>("RiskTriggerEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RiskTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("VelocityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("CompanyNameId");

                    b.HasIndex("DurationId");

                    b.HasIndex("InherentRiskId");

                    b.HasIndex("PersistenceId");

                    b.HasIndex("ResidualRiskId");

                    b.HasIndex("RiskCategoryId");

                    b.HasIndex("RiskLiRiskImpactkelihoodId");

                    b.HasIndex("RiskLikelihoodId");

                    b.HasIndex("RiskManagerId");

                    b.HasIndex("RiskOwnerId");

                    b.HasIndex("RiskScoringMethodId");

                    b.HasIndex("RiskSourceId");

                    b.HasIndex("RiskStateId");

                    b.HasIndex("RiskStatusId");

                    b.HasIndex("RiskTreatmentId");

                    b.HasIndex("RiskTypeId");

                    b.HasIndex("VelocityId");

                    b.ToTable("RiskManagements");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementAssetInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssetInformationId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("RiskManagementAssetInformations");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementBusinessProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessProcessId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("RiskManagementBusinessProcess");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementFinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FindingId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FindingId");

                    b.HasIndex("RiskManagementId");

                    b.ToTable("RiskManagementFindings");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MitigationActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MitigationCost")
                        .HasColumnType("int");

                    b.Property<long?>("MitigationOwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MitigationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ResidualImpactRatingId")
                        .HasColumnType("int");

                    b.Property<int?>("ResidualLikelihoodRatingId")
                        .HasColumnType("int");

                    b.Property<string>("ResidualRiskNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskAvoidancePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RiskManagementId")
                        .HasColumnType("bigint");

                    b.Property<string>("RiskTreatmentPlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskTreatmentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentActionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MitigationOwnerId");

                    b.HasIndex("MitigationStatusId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ResidualImpactRatingId");

                    b.HasIndex("ResidualLikelihoodRatingId");

                    b.HasIndex("RiskManagementId");

                    b.HasIndex("TreatmentActionId");

                    b.ToTable("RiskTreatments");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RiskTreatmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RiskTreatmentId");

                    b.ToTable("RiskTreatmentAttachments");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskTreatmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("RiskTreatmentId");

                    b.ToTable("RiskTreatmentContracts");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentException", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExceptionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskTreatmentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExceptionId");

                    b.HasIndex("RiskTreatmentId");

                    b.ToTable("RiskTreatmentExceptions");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentVendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RiskTreatmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RiskTreatmentId");

                    b.HasIndex("VendorId");

                    b.ToTable("RiskTreatmentVendors");
                });

            modelBuilder.Entity("Lockthreat.Storage.BinaryObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AppBinaryObjects");
                });

            modelBuilder.Entity("Lockthreat.StrategicObjectives.StrategicObjective", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExecutiveSponsorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StrategicObjectiveId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrategicObjectiveTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveSponsorId");

                    b.HasIndex("GoalId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("StrategicObjectives");
                });

            modelBuilder.Entity("Lockthreat.SystemApplications.SystemApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvailibilityId")
                        .HasColumnType("int");

                    b.Property<long?>("BusinessOwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConfidentialityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IntegrityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LockThreatOrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("OthersId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailibilityId");

                    b.HasIndex("BusinessOwnerId");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("ConfidentialityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("IntegrityId");

                    b.HasIndex("LockThreatOrganizationId");

                    b.HasIndex("OthersId");

                    b.ToTable("SystemApplications");
                });

            modelBuilder.Entity("Lockthreat.SystemApplications.SystemApplicationService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusinessServiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SystemApplicationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessServiceId");

                    b.HasIndex("SystemApplicationId");

                    b.ToTable("SystemApplicationServices");
                });

            modelBuilder.Entity("Lockthreat.Vendors.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorCriticalRatingId")
                        .HasColumnType("int");

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendorInitialRatingId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("VendorCriticalRatingId");

                    b.HasIndex("VendorInitialRatingId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Lockthreat.Vendors.VendorProductService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeleterUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndustryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastModifierUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IndustryId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorProductServices");
                });

            modelBuilder.Entity("Lockthreat.Editions.SubscribableEdition", b =>
                {
                    b.HasBaseType("Abp.Application.Editions.Edition");

                    b.Property<decimal?>("AnnualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DailyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ExpiringEditionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrialDayCount")
                        .HasColumnType("int");

                    b.Property<int?>("WaitingDayAfterExpire")
                        .HasColumnType("int");

                    b.Property<decimal?>("WeeklyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("AbpEditions");

                    b.HasDiscriminator().HasValue("SubscribableEdition");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.HasIndex("EditionId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("EditionFeatureSetting");
                });

            modelBuilder.Entity("Abp.MultiTenancy.TenantFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("TenantFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("RolePermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasIndex("UserId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("UserPermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Roles.Role", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Settings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.DynamicParameterValue", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameter", "DynamicParameter")
                        .WithMany("DynamicParameterValues")
                        .HasForeignKey("DynamicParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.EntityDynamicParameter", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameter", "DynamicParameter")
                        .WithMany()
                        .HasForeignKey("DynamicParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.DynamicEntityParameters.EntityDynamicParameterValue", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.EntityDynamicParameter", "EntityDynamicParameter")
                        .WithMany()
                        .HasForeignKey("EntityDynamicParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChangeSet", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("EntityChangeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.EntityHistory.EntityPropertyChange", b =>
                {
                    b.HasOne("Abp.EntityHistory.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.HasOne("Abp.Organizations.OrganizationUnit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Abp.Webhooks.WebhookSendAttempt", b =>
                {
                    b.HasOne("Abp.Webhooks.WebhookEvent", "WebhookEvent")
                        .WithMany()
                        .HasForeignKey("WebhookEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lockthreat.AddTasks.AddTask", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Lockthreat.Employees.Employee", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "LinkedTo")
                        .WithMany()
                        .HasForeignKey("LinkedToId");

                    b.HasOne("Lockthreat.Employees.Employee", "RequestedBy")
                        .WithMany()
                        .HasForeignKey("RequestedById");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskLevel")
                        .WithMany()
                        .HasForeignKey("RiskLevelId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeId");
                });

            modelBuilder.Entity("Lockthreat.AddTasks.TaskAttachment", b =>
                {
                    b.HasOne("Lockthreat.AddTasks.AddTask", "AddTask")
                        .WithMany()
                        .HasForeignKey("AddTaskId");
                });

            modelBuilder.Entity("Lockthreat.AddTasks.TaskNotification", b =>
                {
                    b.HasOne("Lockthreat.AddTasks.AddTask", "AddTask")
                        .WithMany()
                        .HasForeignKey("AddTaskId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.AssetInformations.AssetInformation", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AssetCategory")
                        .WithMany()
                        .HasForeignKey("AssetCategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AssetLabel")
                        .WithMany()
                        .HasForeignKey("AssetLabelId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Integrity")
                        .WithMany()
                        .HasForeignKey("IntegrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Other")
                        .WithMany()
                        .HasForeignKey("OtherId");
                });

            modelBuilder.Entity("Lockthreat.Audits.Audit", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AuditArea")
                        .WithMany()
                        .HasForeignKey("AuditAreaId");

                    b.HasOne("Lockthreat.Employees.Employee", "AuditContact")
                        .WithMany()
                        .HasForeignKey("AuditContactId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AuditServicesProvider")
                        .WithMany()
                        .HasForeignKey("AuditServicesProviderId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FinacialYear")
                        .WithMany()
                        .HasForeignKey("FinacialYearId");

                    b.HasOne("Lockthreat.Employees.Employee", "LeadAuditor")
                        .WithMany()
                        .HasForeignKey("LeadAuditorId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "RelatedBsiness")
                        .WithMany()
                        .HasForeignKey("RelatedBsinessId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditAttachment", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditAuditor", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditBusinessService", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditFacilitieDatacenter", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "FacilitieDatacenter")
                        .WithMany()
                        .HasForeignKey("FacilitieDatacenterId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditTeam", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditVendor", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaper", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId1");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaperEvidence", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "DocumentSource")
                        .WithMany()
                        .HasForeignKey("DocumentSourceId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Audits.AuditWorkpaperReviewer", b =>
                {
                    b.HasOne("Lockthreat.Audits.AuditWorkpaper", "AuditWorkpaper")
                        .WithMany()
                        .HasForeignKey("AuditWorkpaperId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "MandateType")
                        .WithMany()
                        .HasForeignKey("MandateTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocumentBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocuments")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentsId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");
                });

            modelBuilder.Entity("Lockthreat.AuthoratativeDocuments.AuthoratativeDocumentOrganization", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");
                });

            modelBuilder.Entity("Lockthreat.Authorization.Roles.Role", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Lockthreat.Authorization.Users.User", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Lockthreat.BusinessEntities.BusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcess", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ActivityCycle")
                        .WithMany()
                        .HasForeignKey("ActivityCycleId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Intergrity")
                        .WithMany()
                        .HasForeignKey("IntergrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProcessManager")
                        .WithMany()
                        .HasForeignKey("ProcessManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProcessOwner")
                        .WithMany()
                        .HasForeignKey("ProcessOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ProcessPriority")
                        .WithMany()
                        .HasForeignKey("ProcessPriorityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ProcessType")
                        .WithMany()
                        .HasForeignKey("ProcessTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Regulatory")
                        .WithMany()
                        .HasForeignKey("RegulatoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ReviewPeriod")
                        .WithMany()
                        .HasForeignKey("ReviewPeriodId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "SlaApplicable")
                        .WithMany()
                        .HasForeignKey("SlaApplicableId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessService", b =>
                {
                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");
                });

            modelBuilder.Entity("Lockthreat.BusinessProcesses.BusinessProcessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");
                });

            modelBuilder.Entity("Lockthreat.BusinessServices.BusinessService", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Lockthreat.Employees.Employee", "BusinessServiceManager")
                        .WithMany()
                        .HasForeignKey("BusinessServiceManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "BusinessServiceOwner")
                        .WithMany()
                        .HasForeignKey("BusinessServiceOwnerId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnitDependent")
                        .WithMany()
                        .HasForeignKey("BusinessUnitDependentId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnitprimary")
                        .WithMany()
                        .HasForeignKey("BusinessUnitprimaryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Intergrity")
                        .WithMany()
                        .HasForeignKey("IntergrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId");
                });

            modelBuilder.Entity("Lockthreat.BusinessServices.BusinessServiceUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");
                });

            modelBuilder.Entity("Lockthreat.Citations.Citation", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "CitationClass")
                        .WithMany()
                        .HasForeignKey("CitationClassId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "CitationType")
                        .WithMany()
                        .HasForeignKey("CitationTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FrameworkObjectives")
                        .WithMany()
                        .HasForeignKey("FrameworkObjectivesId");
                });

            modelBuilder.Entity("Lockthreat.Citations.CitationControlStandard", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.ControlStandards.ControlStandard", "ControlStandard")
                        .WithMany()
                        .HasForeignKey("ControlStandardId");
                });

            modelBuilder.Entity("Lockthreat.Citations.CitationQuestion", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Lockthreat.Contacts.Contact", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ContactType")
                        .WithMany()
                        .HasForeignKey("ContactTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Employees.Employee", "LoginUser")
                        .WithMany()
                        .HasForeignKey("LoginUserId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Lockthreat.Contacts.ContactCyberAwarenessScore", b =>
                {
                    b.HasOne("Lockthreat.Contacts.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.Contract", b =>
                {
                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ContractCategory")
                        .WithMany()
                        .HasForeignKey("ContractCategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ContractType")
                        .WithMany()
                        .HasForeignKey("ContractTypeId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractAttachment", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractBusinessService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractEmployee", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractEmployeeNotification", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractITService", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.Contracts.ContractRiskTreatment", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.RiskTreatments.RiskTreatment", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");
                });

            modelBuilder.Entity("Lockthreat.ControlDesigns.ControlDesign", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ResultStatus")
                        .WithMany()
                        .HasForeignKey("ResultStatusId");
                });

            modelBuilder.Entity("Lockthreat.ControlStandards.ControlStandard", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlArea")
                        .WithMany()
                        .HasForeignKey("ControlAreaId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlCategory")
                        .WithMany()
                        .HasForeignKey("ControlCategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlClassification")
                        .WithMany()
                        .HasForeignKey("ControlClassificationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlFrequency")
                        .WithMany()
                        .HasForeignKey("ControlFrequencyId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FrameworkObjective")
                        .WithMany()
                        .HasForeignKey("FrameworkObjectiveId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FrequencyType")
                        .WithMany()
                        .HasForeignKey("FrequencyTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "TargetType")
                        .WithMany()
                        .HasForeignKey("TargetTypeId");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");
                });

            modelBuilder.Entity("Lockthreat.CyberAwarenessScores.CyberAwarenessScoreOrganization", b =>
                {
                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");
                });

            modelBuilder.Entity("Lockthreat.Employees.Employee", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "EmployeeGrade")
                        .WithMany()
                        .HasForeignKey("EmployeeGradeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeAttachment", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeBusinessService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeContract", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeCyberAwarenessScore", b =>
                {
                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeException", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeesId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeReviewData", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.ReviewDatas.ReviewData", "ReviewData")
                        .WithMany()
                        .HasForeignKey("ReviewDataId");
                });

            modelBuilder.Entity("Lockthreat.Employees.EmployeeService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.Exception", b =>
                {
                    b.HasOne("Lockthreat.AssetInformations.AssetInformation", "AssetInformation")
                        .WithMany()
                        .HasForeignKey("AssetInformationId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Critcality")
                        .WithMany()
                        .HasForeignKey("CritcalityId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ExceptionStatus")
                        .WithMany()
                        .HasForeignKey("ExceptionStatusId");

                    b.HasOne("Lockthreat.Employees.Employee", "ExpertReviewer")
                        .WithMany()
                        .HasForeignKey("ExpertReviewerId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ReviewPriority")
                        .WithMany()
                        .HasForeignKey("ReviewPriorityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ReviewStatus")
                        .WithMany()
                        .HasForeignKey("ReviewStatusId");

                    b.HasOne("Lockthreat.SystemApplications.SystemApplication", "SystemApplication")
                        .WithMany()
                        .HasForeignKey("SystemApplicationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionAuditingControl", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionCitation", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionCitationLibrary", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionDocument", b =>
                {
                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionOrganization", b =>
                {
                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");
                });

            modelBuilder.Entity("Lockthreat.Exceptions.ExceptionRemediation", b =>
                {
                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");

                    b.HasOne("Lockthreat.Remediations.Remediation", "Remediation")
                        .WithMany()
                        .HasForeignKey("RemediationId");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnitGaurdian")
                        .WithMany()
                        .HasForeignKey("BusinessUnitGaurdianId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnitOwner")
                        .WithMany()
                        .HasForeignKey("BusinessUnitOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FacilityType")
                        .WithMany()
                        .HasForeignKey("FacilityTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Integrity")
                        .WithMany()
                        .HasForeignKey("IntegrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenterProcess", b =>
                {
                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "FacilitieDatacenter")
                        .WithMany()
                        .HasForeignKey("FacilitieDatacenterId");
                });

            modelBuilder.Entity("Lockthreat.FacilitieDatacenters.FacilitieDatacenterService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "FacilitieDatacenter")
                        .WithMany()
                        .HasForeignKey("FacilitieDatacenterId");
                });

            modelBuilder.Entity("Lockthreat.FacilitiesDatacenters.FacilitieDatacenterITService", b =>
                {
                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "FacilitieDatacenter")
                        .WithMany()
                        .HasForeignKey("FacilitieDatacenterId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.Findings.FidingOrganization", b =>
                {
                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");
                });

            modelBuilder.Entity("Lockthreat.Findings.Finding", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("Lockthreat.Employees.Employee", "Assigned")
                        .WithMany()
                        .HasForeignKey("AssignedId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId");

                    b.HasOne("Lockthreat.Employees.Employee", "FindingCoordinator")
                        .WithMany()
                        .HasForeignKey("FindingCoordinatorId");

                    b.HasOne("Lockthreat.Employees.Employee", "FindingManager")
                        .WithMany()
                        .HasForeignKey("FindingManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "FindingOwner")
                        .WithMany()
                        .HasForeignKey("FindingOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FindingStatus")
                        .WithMany()
                        .HasForeignKey("FindingStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Ranking")
                        .WithMany()
                        .HasForeignKey("RankingId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Response")
                        .WithMany()
                        .HasForeignKey("ResponseId");

                    b.HasOne("Lockthreat.Employees.Employee", "Reviewed")
                        .WithMany()
                        .HasForeignKey("ReviewedId");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FidingBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FindingAssetInformation", b =>
                {
                    b.HasOne("Lockthreat.AssetInformations.AssetInformation", "AssetInformation")
                        .WithMany()
                        .HasForeignKey("AssetInformationId");

                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");
                });

            modelBuilder.Entity("Lockthreat.FindingsInformation.FindingAuthoratativeSource", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.GrcProgram", b =>
                {
                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProgramDirector")
                        .WithMany()
                        .HasForeignKey("ProgramDirectorId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProgramSponsor")
                        .WithMany()
                        .HasForeignKey("ProgramSponsorId");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramAuthoritativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.GrcPrograms.GrcProgram", "GrcProgram")
                        .WithMany()
                        .HasForeignKey("GrcProgramId");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramCoordinator", b =>
                {
                    b.HasOne("Lockthreat.GrcPrograms.GrcProgram", "GrcProgram")
                        .WithMany()
                        .HasForeignKey("GrcProgramId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProgramCoordinators")
                        .WithMany()
                        .HasForeignKey("ProgramCoordinatorsId");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramCountry", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.GrcPrograms.GrcProgram", "GrcProgram")
                        .WithMany()
                        .HasForeignKey("GrcProgramId");
                });

            modelBuilder.Entity("Lockthreat.GrcPrograms.ProgramTeam", b =>
                {
                    b.HasOne("Lockthreat.GrcPrograms.GrcProgram", "GrcProgram")
                        .WithMany()
                        .HasForeignKey("GrcProgramId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProgramTeams")
                        .WithMany()
                        .HasForeignKey("ProgramTeamsId");
                });

            modelBuilder.Entity("Lockthreat.HardwareAssets.HardwareAsset", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Integrity")
                        .WithMany()
                        .HasForeignKey("IntegrityId");

                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationsId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITService", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.Employees.Employee", "ITServiceManager")
                        .WithMany()
                        .HasForeignKey("ITServiceManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "ITServiceOwner")
                        .WithMany()
                        .HasForeignKey("ITServiceOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Integrity")
                        .WithMany()
                        .HasForeignKey("IntegrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RegulatoryMandate")
                        .WithMany()
                        .HasForeignKey("RegulatoryMandateId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ServiceClassification")
                        .WithMany()
                        .HasForeignKey("ServiceClassificationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceBusinessService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceContract", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");
                });

            modelBuilder.Entity("Lockthreat.ITServices.ITServiceRemediation", b =>
                {
                    b.HasOne("Lockthreat.ITServices.ITService", "ITService")
                        .WithMany()
                        .HasForeignKey("ITServiceId");

                    b.HasOne("Lockthreat.Remediations.Remediation", "Remediation")
                        .WithMany()
                        .HasForeignKey("RemediationId");
                });

            modelBuilder.Entity("Lockthreat.Incidents.Incident", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Adversary")
                        .WithMany()
                        .HasForeignKey("AdversaryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Criticality")
                        .WithMany()
                        .HasForeignKey("CriticalityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "DetectedbyInternalControls")
                        .WithMany()
                        .HasForeignKey("DetectedbyInternalControlsId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.Employees.Employee", "FollowUpCompletedBy")
                        .WithMany()
                        .HasForeignKey("FollowUpCompletedById");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentCategory")
                        .WithMany()
                        .HasForeignKey("IncidentCategoryId");

                    b.HasOne("Lockthreat.Employees.Employee", "IncidentClosedBy")
                        .WithMany()
                        .HasForeignKey("IncidentClosedById");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentImpact")
                        .WithMany()
                        .HasForeignKey("IncidentImpactId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentPriority")
                        .WithMany()
                        .HasForeignKey("IncidentPriorityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentSeverity")
                        .WithMany()
                        .HasForeignKey("IncidentSeverityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentStatus")
                        .WithMany()
                        .HasForeignKey("IncidentStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IncidentTypes")
                        .WithMany()
                        .HasForeignKey("IncidentTypesId");

                    b.HasOne("Lockthreat.Employees.Employee", "ReportedBy")
                        .WithMany()
                        .HasForeignKey("ReportedById");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentAttachment", b =>
                {
                    b.HasOne("Lockthreat.Incidents.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentFinding", b =>
                {
                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Lockthreat.Incidents.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId");
                });

            modelBuilder.Entity("Lockthreat.Incidents.IncidentReviewer", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.Incidents.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControl", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Automation")
                        .WithMany()
                        .HasForeignKey("AutomationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ComplianceStatus")
                        .WithMany()
                        .HasForeignKey("ComplianceStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlFrequency")
                        .WithMany()
                        .HasForeignKey("ControlFrequencyId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ControlStatus")
                        .WithMany()
                        .HasForeignKey("ControlStatusId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "FrequencyType")
                        .WithMany()
                        .HasForeignKey("FrequencyTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IcType")
                        .WithMany()
                        .HasForeignKey("IcTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "InternalAuditControl")
                        .WithMany()
                        .HasForeignKey("InternalAuditControlId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlAssignedTester", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlCitation", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlFacilitieDatacenter", b =>
                {
                    b.HasOne("Lockthreat.FacilitieDatacenters.FacilitieDatacenter", "FacilitieDatacenter")
                        .WithMany()
                        .HasForeignKey("FacilitieDatacenterId");

                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlFinding", b =>
                {
                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlPolicyManager", b =>
                {
                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlRiskManagement", b =>
                {
                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlRiskManagementTitle", b =>
                {
                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.InternalControls.InternalControlSystemApplication", b =>
                {
                    b.HasOne("Lockthreat.InternalControls.InternalControl", "InternalControl")
                        .WithMany()
                        .HasForeignKey("InternalControlId");

                    b.HasOne("Lockthreat.SystemApplications.SystemApplication", "SystemApplication")
                        .WithMany()
                        .HasForeignKey("SystemApplicationId");
                });

            modelBuilder.Entity("Lockthreat.IssueManagements.IssueManageMentProject", b =>
                {
                    b.HasOne("Lockthreat.IssueManagements.IssueManagement", "IssueManagement")
                        .WithMany()
                        .HasForeignKey("IssueManagementId");

                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Lockthreat.IssueManagements.IssueManagement", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Lockthreat.Employees.Employee", "CompletedBy")
                        .WithMany()
                        .HasForeignKey("CompletedById");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IssueCategory")
                        .WithMany()
                        .HasForeignKey("IssueCategoryId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId1");

                    b.HasOne("Lockthreat.Employees.Employee", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("Lockthreat.Employees.Employee", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterId");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicator", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Frequency")
                        .WithMany()
                        .HasForeignKey("FrequencyId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicatorAdministrator", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicator", "KeyPerformanceIndicator")
                        .WithMany()
                        .HasForeignKey("KeyPerformanceIndicatorId");
                });

            modelBuilder.Entity("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicatorBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.KeyPerformanceIndicators.KeyPerformanceIndicator", "KeyPerformanceIndicator")
                        .WithMany()
                        .HasForeignKey("KeyPerformanceIndicatorId");
                });

            modelBuilder.Entity("Lockthreat.KeyRiskIndicators.KeyRiskIndicator", b =>
                {
                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Lockthreat.KeyRiskIndicators.KeyRiskIndicatorBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.KeyRiskIndicators.KeyRiskIndicator", "KeyRiskIndicator")
                        .WithMany()
                        .HasForeignKey("KeyRiskIndicatorId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.Meeting", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "MeetingClassification")
                        .WithMany()
                        .HasForeignKey("MeetingClassificationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "MeetingType")
                        .WithMany()
                        .HasForeignKey("MeetingTypeId");

                    b.HasOne("Lockthreat.Employees.Employee", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingAbsenteeUser", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingAttendUser", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingFinding", b =>
                {
                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingIssueIdentified", b =>
                {
                    b.HasOne("Lockthreat.IssueManagements.IssueManagement", "IssueManagement")
                        .WithMany()
                        .HasForeignKey("IssueManagementId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Lockthreat.Meetings.MeetingTask", b =>
                {
                    b.HasOne("Lockthreat.AddTasks.AddTask", "AddTask")
                        .WithMany()
                        .HasForeignKey("AddTaskId");

                    b.HasOne("Lockthreat.Meetings.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Payments.SubscriptionPayment", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lockthreat.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("Lockthreat.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Lockthreat.OrganizationSetups.LockThreatOrganization", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AddressCountry")
                        .WithMany()
                        .HasForeignKey("AddressCountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "IndustrySector")
                        .WithMany()
                        .HasForeignKey("IndustrySectorId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocuments")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentsId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyDistribution", b =>
                {
                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyImpactedOranization", b =>
                {
                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyManager", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "ApprovalBy")
                        .WithMany()
                        .HasForeignKey("ApprovalById");

                    b.HasOne("Lockthreat.Employees.Employee", "FinalReviewer")
                        .WithMany()
                        .HasForeignKey("FinalReviewerId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Employees.Employee", "PolicyManagers")
                        .WithMany()
                        .HasForeignKey("PolicyManagersId");

                    b.HasOne("Lockthreat.Employees.Employee", "PolicyOwner")
                        .WithMany()
                        .HasForeignKey("PolicyOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "PolicyStatus")
                        .WithMany()
                        .HasForeignKey("PolicyStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "PolicyType")
                        .WithMany()
                        .HasForeignKey("PolicyTypeId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyRelatedControl", b =>
                {
                    b.HasOne("Lockthreat.Citations.Citation", "Citation")
                        .WithMany()
                        .HasForeignKey("CitationId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.PolicyManagers.PolicyReviewer", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.PolicyManagers.PolicyManager", "PolicyManager")
                        .WithMany()
                        .HasForeignKey("PolicyManagerId");
                });

            modelBuilder.Entity("Lockthreat.Projects.Project", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.GrcPrograms.GrcProgram", "ParentProgram")
                        .WithMany()
                        .HasForeignKey("ParentProgramId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProjectDirector")
                        .WithMany()
                        .HasForeignKey("ProjectDirectorId");

                    b.HasOne("Lockthreat.Employees.Employee", "ProjectSponsor")
                        .WithMany()
                        .HasForeignKey("ProjectSponsorId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectAudit", b =>
                {
                    b.HasOne("Lockthreat.Audits.Audit", "Audit")
                        .WithMany()
                        .HasForeignKey("AuditId");

                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectComponent", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ProjectComponents")
                        .WithMany()
                        .HasForeignKey("ProjectComponentsId");

                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectCountries", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMember", b =>
                {
                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Lockthreat.Employees.Employee", "TeamMembersInternal")
                        .WithMany()
                        .HasForeignKey("TeamMembersInternalId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMemberExternal", b =>
                {
                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Lockthreat.Employees.Employee", "TeamMembersExternal")
                        .WithMany()
                        .HasForeignKey("TeamMembersExternalId");
                });

            modelBuilder.Entity("Lockthreat.Projects.ProjectTeamMemberProject", b =>
                {
                    b.HasOne("Lockthreat.Projects.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Lockthreat.Employees.Employee", "TeamMembers")
                        .WithMany()
                        .HasForeignKey("TeamMembersId");
                });

            modelBuilder.Entity("Lockthreat.Questions.Question", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "AnswerType")
                        .WithMany()
                        .HasForeignKey("AnswerTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "QuestionArea")
                        .WithMany()
                        .HasForeignKey("QuestionAreaId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "QuestionCategory")
                        .WithMany()
                        .HasForeignKey("QuestionCategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "QuestionStatus")
                        .WithMany()
                        .HasForeignKey("QuestionStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionReviewAssessment", b =>
                {
                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionReviewData", b =>
                {
                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Lockthreat.ReviewDatas.ReviewData", "ReviewData")
                        .WithMany()
                        .HasForeignKey("ReviewDataId");
                });

            modelBuilder.Entity("Lockthreat.Questions.QuestionTarget", b =>
                {
                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "QuestionTargets")
                        .WithMany()
                        .HasForeignKey("QuestionTargetsId");
                });

            modelBuilder.Entity("Lockthreat.Remediations.Remediation", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "PlanManager")
                        .WithMany()
                        .HasForeignKey("PlanManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "PlanOwner")
                        .WithMany()
                        .HasForeignKey("PlanOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "PlanStatus")
                        .WithMany()
                        .HasForeignKey("PlanStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RemediationsType")
                        .WithMany()
                        .HasForeignKey("RemediationsTypeId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagements")
                        .WithMany()
                        .HasForeignKey("RiskManagementsId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "SubmissionStatus")
                        .WithMany()
                        .HasForeignKey("SubmissionStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "TreatmentAction")
                        .WithMany()
                        .HasForeignKey("TreatmentActionId");
                });

            modelBuilder.Entity("Lockthreat.Remediations.RemediationAttachment", b =>
                {
                    b.HasOne("Lockthreat.Remediations.Remediation", "Remediation")
                        .WithMany()
                        .HasForeignKey("RemediationId");
                });

            modelBuilder.Entity("Lockthreat.Remediations.RemediationRiskManagement", b =>
                {
                    b.HasOne("Lockthreat.Remediations.Remediation", "Remediation")
                        .WithMany()
                        .HasForeignKey("RemediationId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessment", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ReviewType")
                        .WithMany()
                        .HasForeignKey("ReviewTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessmentBusinessUnit", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");
                });

            modelBuilder.Entity("Lockthreat.ReviewAssessments.ReviewAssessmentVendor", b =>
                {
                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Lockthreat.ReviewDatas.ReviewData", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.Contacts.Contact", "Contacts")
                        .WithMany()
                        .HasForeignKey("ContactsId");

                    b.HasOne("Lockthreat.CyberAwarenessScores.CyberAwarenessScore", "CyberAwarenessScore")
                        .WithMany()
                        .HasForeignKey("CyberAwarenessScoreId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.Employees.Employee", "QuestionAssignedTo")
                        .WithMany()
                        .HasForeignKey("QuestionAssignedToId");

                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Lockthreat.Questions.Question", "QuestionLibrary")
                        .WithMany()
                        .HasForeignKey("QuestionLibraryId");

                    b.HasOne("Lockthreat.Employees.Employee", "RespondedBy")
                        .WithMany()
                        .HasForeignKey("RespondedById");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");

                    b.HasOne("Lockthreat.Employees.Employee", "ReviewLead")
                        .WithMany()
                        .HasForeignKey("ReviewLeadId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ReviewQuestionStatus")
                        .WithMany()
                        .HasForeignKey("ReviewQuestionStatusId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.HasOne("Lockthreat.Employees.Employee", "Verifier")
                        .WithMany()
                        .HasForeignKey("VerifierId");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentAuthoratativeDocument", b =>
                {
                    b.HasOne("Lockthreat.AuthoratativeDocuments.AuthoratativeDocument", "AuthoratativeDocument")
                        .WithMany()
                        .HasForeignKey("AuthoratativeDocumentId");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentOraganization", b =>
                {
                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");
                });

            modelBuilder.Entity("Lockthreat.ReviewsAssessments.ReviewAssessmentQuestion", b =>
                {
                    b.HasOne("Lockthreat.Questions.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("Lockthreat.ReviewAssessments.ReviewAssessment", "ReviewAssessment")
                        .WithMany()
                        .HasForeignKey("ReviewAssessmentId");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagement", b =>
                {
                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "CompanyName")
                        .WithMany()
                        .HasForeignKey("CompanyNameId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Duration")
                        .WithMany()
                        .HasForeignKey("DurationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "InherentRisk")
                        .WithMany()
                        .HasForeignKey("InherentRiskId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Persistence")
                        .WithMany()
                        .HasForeignKey("PersistenceId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ResidualRisk")
                        .WithMany()
                        .HasForeignKey("ResidualRiskId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskCategory")
                        .WithMany()
                        .HasForeignKey("RiskCategoryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskLiRiskImpactkelihood")
                        .WithMany()
                        .HasForeignKey("RiskLiRiskImpactkelihoodId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskLikelihood")
                        .WithMany()
                        .HasForeignKey("RiskLikelihoodId");

                    b.HasOne("Lockthreat.Employees.Employee", "RiskManager")
                        .WithMany()
                        .HasForeignKey("RiskManagerId");

                    b.HasOne("Lockthreat.Employees.Employee", "RiskOwner")
                        .WithMany()
                        .HasForeignKey("RiskOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskScoringMethod")
                        .WithMany()
                        .HasForeignKey("RiskScoringMethodId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskSource")
                        .WithMany()
                        .HasForeignKey("RiskSourceId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskState")
                        .WithMany()
                        .HasForeignKey("RiskStateId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskStatus")
                        .WithMany()
                        .HasForeignKey("RiskStatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "RiskType")
                        .WithMany()
                        .HasForeignKey("RiskTypeId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Velocity")
                        .WithMany()
                        .HasForeignKey("VelocityId");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementAssetInformation", b =>
                {
                    b.HasOne("Lockthreat.AssetInformations.AssetInformation", "AssetInformation")
                        .WithMany()
                        .HasForeignKey("AssetInformationId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementBusinessProcess", b =>
                {
                    b.HasOne("Lockthreat.BusinessProcesses.BusinessProcess", "BusinessProcess")
                        .WithMany()
                        .HasForeignKey("BusinessProcessId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.RiskManagements.RiskManagementFinding", b =>
                {
                    b.HasOne("Lockthreat.Findings.Finding", "Finding")
                        .WithMany()
                        .HasForeignKey("FindingId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatment", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "MitigationOwner")
                        .WithMany()
                        .HasForeignKey("MitigationOwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "MitigationStatus")
                        .WithMany()
                        .HasForeignKey("MitigationStatusId");

                    b.HasOne("Lockthreat.Employees.Employee", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ResidualImpactRating")
                        .WithMany()
                        .HasForeignKey("ResidualImpactRatingId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "ResidualLikelihoodRating")
                        .WithMany()
                        .HasForeignKey("ResidualLikelihoodRatingId");

                    b.HasOne("Lockthreat.RiskManagements.RiskManagement", "RiskManagement")
                        .WithMany()
                        .HasForeignKey("RiskManagementId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "TreatmentAction")
                        .WithMany()
                        .HasForeignKey("TreatmentActionId");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentAttachment", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Lockthreat.RiskTreatments.RiskTreatment", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentContract", b =>
                {
                    b.HasOne("Lockthreat.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("Lockthreat.RiskTreatments.RiskTreatment", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentException", b =>
                {
                    b.HasOne("Lockthreat.Exceptions.Exception", "Exception")
                        .WithMany()
                        .HasForeignKey("ExceptionId");

                    b.HasOne("Lockthreat.RiskTreatments.RiskTreatment", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");
                });

            modelBuilder.Entity("Lockthreat.RiskTreatments.RiskTreatmentVendor", b =>
                {
                    b.HasOne("Lockthreat.RiskTreatments.RiskTreatment", "RiskTreatment")
                        .WithMany()
                        .HasForeignKey("RiskTreatmentId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Lockthreat.StrategicObjectives.StrategicObjective", b =>
                {
                    b.HasOne("Lockthreat.Employees.Employee", "ExecutiveSponsor")
                        .WithMany()
                        .HasForeignKey("ExecutiveSponsorId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Goal")
                        .WithMany()
                        .HasForeignKey("GoalId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("Lockthreat.SystemApplications.SystemApplication", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Availibility")
                        .WithMany()
                        .HasForeignKey("AvailibilityId");

                    b.HasOne("Lockthreat.Employees.Employee", "BusinessOwner")
                        .WithMany()
                        .HasForeignKey("BusinessOwnerId");

                    b.HasOne("Lockthreat.BusinessEntities.BusinessUnit", "BusinessUnit")
                        .WithMany()
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Confidentiality")
                        .WithMany()
                        .HasForeignKey("ConfidentialityId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Integrity")
                        .WithMany()
                        .HasForeignKey("IntegrityId");

                    b.HasOne("Lockthreat.OrganizationSetups.LockThreatOrganization", "LockThreatOrganization")
                        .WithMany()
                        .HasForeignKey("LockThreatOrganizationId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Others")
                        .WithMany()
                        .HasForeignKey("OthersId");
                });

            modelBuilder.Entity("Lockthreat.SystemApplications.SystemApplicationService", b =>
                {
                    b.HasOne("Lockthreat.BusinessServices.BusinessService", "BusinessService")
                        .WithMany()
                        .HasForeignKey("BusinessServiceId");

                    b.HasOne("Lockthreat.SystemApplications.SystemApplication", "SystemApplication")
                        .WithMany()
                        .HasForeignKey("SystemApplicationId");
                });

            modelBuilder.Entity("Lockthreat.Vendors.Vendor", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "VendorCriticalRating")
                        .WithMany()
                        .HasForeignKey("VendorCriticalRatingId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "VendorInitialRating")
                        .WithMany()
                        .HasForeignKey("VendorInitialRatingId");

                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "VendorType")
                        .WithMany()
                        .HasForeignKey("VendorTypeId");
                });

            modelBuilder.Entity("Lockthreat.Vendors.VendorProductService", b =>
                {
                    b.HasOne("Abp.DynamicEntityParameters.DynamicParameterValue", "Industry")
                        .WithMany()
                        .HasForeignKey("IndustryId");

                    b.HasOne("Lockthreat.Vendors.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Roles.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("Lockthreat.Authorization.Users.User", null)
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
